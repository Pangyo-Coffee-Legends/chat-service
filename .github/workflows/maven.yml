#  워크플로우 이름입니다. GitHub Actions 탭에 표시되는 이름으로, 무엇을 하는 워크플로우인지 명확하게 표시합니다.
name: Meeting-Room CI/CD

#  dev 브랜치에 push가 발생했을 때 이 워크플로우가 실행됩니다.
#  on:은 GitHub 이벤트를 트리거로 지정하는 구문입니다.

#  배포는 항상 최종적으로 main 브랜치에 반영된 이후에만 수행되어야 안전 그래서 pull_request는 주석처리
on:
  push:
    branches: [ "dev" ]
#  pull_request:
#   branches: [ "main" ] << 생략

# jobs는 실행할 작업의 집합입니다. job의 이름, id값, 여기서는 하나의 Job만 정의되어 있고, 이름은 build입니다.
jobs:
  build:
    # 이 Job은 GitHub에서 제공하는 최신 Ubuntu 환경(리눅스)에서 실행됩니다.
    # Actions는 일종의 가상 머신에서 실행됩니다.
    runs-on: ubuntu-latest
    # steps는 해당 Job 안에서 실제 실행할 세부 단계들을 순서대로 정의합니다.
    steps:
    # GitHub Actions에서 현재 레포지토리의 코드를 다운로드하여 가상 환경에서 사용할 수 있도록 해줍니다.
    # actions/checkout은 GitHub이 공식 제공하는 액션입니다. @v4는 해당 GitHub Action의 버전(version)을 의미한다.
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean package --file pom.xml -DskipTests

      # 1. 서버에 디렉토리 생성 및 정리
      - name: Prepare server directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            mkdir -p ~/meeting-room/target
            rm -f ~/meeting-room/target/*.jar

      # 2. JAR 파일 업로드
      - name: Upload JAR
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "target/*.jar"
          target: "~/meeting-room/target"
          strip_components: 1
          overwrite: true
      # 3. application.properties 파일 생성
      - name: Create application.properties file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "${{ secrets.APPLICATION_PROPERTIES }}" > ~/meeting-room/application.properties

      # 4. startup.sh 실행
      - name: Execute startup script
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_ID }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            chmod +x ~/meeting-room/startup.sh
            cd ~/meeting-room && ./startup.sh